name: API

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Must install and run an Azure storage emulator for our tests. We happen to use Azurite.
      - name: Set up Node for Azurite storage emulator
        uses: actions/setup-node@v4

      - name: Install & run Azurite
        run: npm install -g azurite

      - name: Run Azurite in background
        shell: bash
        run: azurite &

      - name: Run tests with pytest
        run: pytest
        # Optional: uncomment the following line to include detailed test options
        # run: pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: 'pip install --target=src/api/.python_packages/lib/site-packages -r src/api/requirements.txt'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api
          include-hidden-files: true
          path: src/api/

  ####### Useful for deloyment, but currently commented out
  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [test, build]
    
  #   # We only run this deployment job when a push event occurs on the main branch.
  #   if: github.event_name == 'push'

  #   environment:
  #     name: Production
  #     url: https://llmailinject.azurewebsites.net

  #   permissions: 
  #     id-token: write
  #     contents: read

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: api
  #         path: dist

  #     - name: Package Function App
  #       run: cd dist && zip -r ../api.zip * .python_packages

  #     - name: Azure CLI Login
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
  #     - name: Upload to Azure Blob Storage
  #       uses: Azure/cli@v1
  #       with:
  #         inlineScript: |
  #           az storage blob upload \
  #           --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
  #           --container-name ${{ secrets.AZURE_FUNCTION_DEPLOY_CONTAINER }} \
  #           --name api.zip \
  #           --file api.zip \
  #           --auth-mode login \
  #           --overwrite
            
  #     - name: Restart Azure Function
  #       run: |
  #         az functionapp restart \
  #           --name ${{ secrets.AZURE_FUNCTION_NAME }} \
  #           --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
  #           --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
